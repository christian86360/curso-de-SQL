-- BASES DE DATOS ING. SOFTWARE
------------------------------------

CREATE DATABASE HOTEL;

USE HOTEL;

CREATE TABLE PAISES (
  PAIS VARCHAR(20) NOT NULL,
  PRIMARY KEY  ( PAIS )
) ;

INSERT INTO  PAISES
VALUES 	('ALEMANIA'),
	('BRASIL'),
 	('COLOMBIA'),
 	('ESPAÑA'),
 	('FRANCIA'),
 	('MÉXICO'),
 	('PORTUGAL'),
 	('PUERTO RICO');

CREATE TABLE CLIENTES (
   ID_CLIENTE 	VARCHAR(20) NOT NULL,
   PAIS 	VARCHAR(20) NOT NULL,
   NOMBRE 	VARCHAR(25) NOT NULL,
   APELLIDOP 	VARCHAR(25) NOT NULL,
   APELLIDOM 	VARCHAR(25),
   DIRECCION 	VARCHAR(50) NOT NULL,
   TELEFONO 	VARCHAR(15) NOT NULL,
   OBSERVACIONES VARCHAR(50),
   PRIMARY KEY (ID_CLIENTE),
   FOREIGN KEY (PAIS) REFERENCES PAISES (PAIS)
);

INSERT INTO  CLIENTES  
VALUES	('12345', 'BRASIL', 'JOAO', 'TEIXEIRA', 'COSTA', 'AVDA PRINCESA ISABEL, 183, COPACABANA', '942344444', 'BUEN CLIENTE'),
	('44444', 'ESPAÑA', 'LUIS', 'GARCÍA', 'GARCÍA', 'CALLE MAYOR, 67 ', '942456444', NULL),
	('456789', 'FRANCIA', 'LUDOVIC', 'GIULY', 'BOURQUIN', '18 AVENUE ALSACEN COUR', '37890194', NULL),
	('223365', 'MÉXICO', 'JAVIER', 'SANTILLAN', 'PAREDES', 'COLIMA NO.12', '57575609', 'BUEN CLIENTE'),
	('44767', 'PORTUGAL', 'THIAGO', 'COELHO', 'DA SILVA', 'AVDA CONDE VALBO N° 30', '865788953', NULL),
	('457689', 'FRANCIA', 'ETHAN', 'DE LA FONTAINE', 'BAUDIN', '2 BD SAINT MARTIN', '37865194', NULL),
	('765789', 'FRANCIA', 'DIDIER', 'COTÉ', 'BISSET', '115, RUE DE L´ABBÉ GROULT', '37777348', 'BUEN CLIENTE'),
	('12395', 'BRASIL', 'AIRTON', 'SARAVI', 'CUNHA', 'PLAZA PIO X, 119, RIO DE JANEIRO', '942456444', NULL),
	('787779', 'COLOMBIA', 'PEDRO CLAVER', 'GARCÍA', 'RODRÍGUEZ', 'CARRERA 106 A NO. 18-51 BARR. CD. JARDIN, CALI', '7459093', NULL),
	('787745', 'COLOMBIA', 'MOISES ABSALÓN', 'LÓPEZ', 'GONZÁLEZ', 'CRA 69 NO 49 - 06, MEDELLÍN', '2480600', NULL);

CREATE TABLE  TEMPORADA  (
   ID_TEMP 	INT NOT NULL,
   FECHAINICIO 	DATE NOT NULL,
   FECHAFINAL 	DATE NOT NULL,
   TIPO 	CHAR(1) NOT NULL CHECK (TIPO IN ('B','M','A')) ,
   PRIMARY KEY  (ID_TEMP)
);

INSERT INTO TEMPORADA 
VALUES	(1, '2017-01-01', '2017-03-31', 'B'),
	(2, '2017-04-01', '2017-05-31', 'M'),
	(3, '2017-06-01', '2017-08-31', 'A'),
	(4, '2017-09-01', '2017-10-31', 'B'),
	(5, '2017-11-01', '2017-12-31', 'A');


CREATE TABLE TIPO_HABITACION (
  ID_T_HAB 	INT NOT NULL,
  CAMAS 	INT NOT NULL,
  EXTERIOR 	VARCHAR(2) NOT NULL CHECK (EXTERIOR IN ('SI', 'NO')),
  SALON 	VARCHAR(2) NOT NULL CHECK (SALON IN ('SI', 'NO')),
  TERRAZA 	VARCHAR(2) NOT NULL CHECK (TERRAZA IN ('SI', 'NO')),
  PRIMARY KEY (ID_T_HAB)
);

INSERT INTO TIPO_HABITACION 
VALUES 	(1, 1, 'SI', 'NO', 'NO'),
	(2, 2, 'SI', 'NO', 'NO'),
	(3, 3, 'SI', 'NO', 'NO'),
	(4, 1, 'SI', 'SI', 'NO');


CREATE TABLE PRECIO_HABITACION (
   IDPRECIO 	INT NOT NULL,
   PRECIO 	DECIMAL(6,2) NOT NULL,
   ID_TEMP 	INT NOT NULL,
   ID_T_HAB 	INT NOT NULL,
   PRIMARY KEY  (IDPRECIO),
   FOREIGN KEY (ID_TEMP) REFERENCES TEMPORADA(ID_TEMP),
   FOREIGN KEY (ID_T_HAB) REFERENCES TIPO_HABITACION(ID_T_HAB)
);

INSERT INTO PRECIO_HABITACION  
VALUES	(1, 300, 1, 1),
	(2, 350, 2, 1),
	(3, 400, 3, 1),
	(4, 350, 4, 1),
	(5, 300, 5, 1),
	(6, 350, 1, 2),
	(7, 400, 2, 2),
	(8, 450, 3, 2),
	(9, 400, 4, 2),
	(10, 350, 5, 2),
	(11, 400, 1, 3),
	(12, 450, 2, 3),
	(13, 500, 3, 3),
	(14, 450, 4, 3),
	(15, 400, 5, 3),
	(16, 500, 1, 4),
	(17, 550, 2, 4),
	(18, 600, 3, 4),
	(19, 550, 4, 4),
	(20, 500, 5, 4);

CREATE TABLE HABITACIONES (
  NUMHABIT 	INT  NOT NULL,
  ID_T_HAB 	INT NOT NULL,
  PRIMARY KEY (NUMHABIT),
  FOREIGN KEY (ID_T_HAB) REFERENCES TIPO_HABITACION (ID_T_HAB)
);
 
INSERT INTO HABITACIONES 
VALUES	(101, 1),
	(102, 1),
	(103, 1),
	(104, 2),
	(105, 2),
	(106, 3),
	(107, 4);

CREATE TABLE TIPO_SERVICIO (
  NOMBRESERVICIO VARCHAR(30) NOT NULL,
  PRIMARY KEY (NOMBRESERVICIO)
);

INSERT INTO TIPO_SERVICIO 
VALUES	('PARKING PRIVADO'),
	('PLANCHADO'),
	('LAVANDERIA Y PLANCHADO'),
	('LAVADO Y PLANCHADO EN SECO'),
	('ALIMENTOS & BEBIDAS'),
	('SERVICIO DE HABITACIONES 24H');

CREATE TABLE SERVICIOS (
   IDSERVICIOS 	INT NOT NULL,
   NOMBRESERVICIO 	VARCHAR(30) NOT NULL,
   DESCRIPCION 	VARCHAR(60) NOT NULL,
   PRECIO 	DECIMAL(6,2) NOT NULL,
   IVA 		FLOAT(5,2) NOT NULL,
   FECHA 	DATE NOT NULL,
   PRIMARY KEY (IDSERVICIOS),
   FOREIGN KEY (NOMBRESERVICIO) REFERENCES TIPO_SERVICIO (NOMBRESERVICIO)
);

INSERT INTO  SERVICIOS 
VALUES 	(1, 'PARKING PRIVADO', 'PENSIÓN POR DIA', 40, 7, '2017-01-01'),
	(2, 'PLANCHADO', 'PRENDA SENCILLA', 35, 7, '2017-01-01'),
	(3, 'PLANCHADO', 'PRENDA ESPECIAL', 66, 7, '2017-01-01'),
	(4, 'LAVANDERIA Y PLANCHADO', 'CAMISA', 60, 7, '2017-01-01'),
	(5, 'LAVANDERIA Y PLANCHADO', 'FALDA', 60, 7, '2017-01-01'),
	(6, 'LAVANDERIA Y PLANCHADO', 'PANTALÓN', 60, 7, '2017-01-01'),
	(7, 'LAVANDERIA Y PLANCHADO', 'FALDA LARGA', 65, 7, '2017-01-01'),
	(8, 'LAVANDERIA Y PLANCHADO', 'CHALECO', 60, 7, '2017-01-01'),
	(9, 'LAVANDERIA Y PLANCHADO', 'BLUSA', 60, 7, '2017-01-01'),
	(10, 'LAVANDERIA Y PLANCHADO', 'BLAZER', 60, 7, '2017-01-01'),
	(11, 'LAVANDERIA Y PLANCHADO', 'VESTIDO SENCILLO', 95, 7, '2017-01-01'),
	(12, 'LAVANDERIA Y PLANCHADO', 'SHORT', 60, 7, '2017-01-01'),
	(13, 'LAVADO Y PLANCHADO EN SECO', 'SACO DE LINO', 60, 7, '2017-01-01'),
	(14, 'LAVADO Y PLANCHADO EN SECO', 'VESTIDO DE NOCHE', 135, 7, '2017-01-01'),
	(15, 'LAVADO Y PLANCHADO EN SECO', 'TRAJE (SACO Y PANTALÓN)', 119, 7, '2017-01-01'),
	(16, 'LAVADO Y PLANCHADO EN SECO', 'VESTIDO CON PEDRERÍA', 245, 7, '2017-01-01'),
	(17, 'LAVADO Y PLANCHADO EN SECO', 'CORBATA', 60, 7, '2017-01-01'),
	(18, 'LAVADO Y PLANCHADO EN SECO', 'SWEATER', 65, 7, '2017-01-01'),
	(19, 'LAVADO Y PLANCHADO EN SECO', 'CHAMARRA', 160, 7, '2017-01-01'),
	(20, 'LAVADO Y PLANCHADO EN SECO', 'SWEATER LARGO', 75, 7, '2017-01-01'),
	(21, 'LAVADO Y PLANCHADO EN SECO', 'ABRIGO CORTO', 95, 7, '2017-01-01'),
	(22, 'LAVADO Y PLANCHADO EN SECO', 'ABRIGO CORTO', 95, 7, '2017-01-01'),
	(23, 'ALIMENTOS & BEBIDAS', 'CONTINENTAL: DESAYUNO LIGERO', 75, 7, '2017-01-01'),
	(24, 'ALIMENTOS & BEBIDAS', 'BUFFET: DESAYUNO AMERICANO AUTOSERVICIO', 100, 7, '2017-01-01'),
	(25, 'ALIMENTOS & BEBIDAS', 'HALF BOARD: DESAYUNO Y COMIDA O CENA', 220, 7, '2017-01-01'),
	(26, 'ALIMENTOS & BEBIDAS', 'FULL BOARD: DESAYUNO, COMIDA Y CENA', 310, 7, '2017-01-01'),
	(27, 'ALIMENTOS & BEBIDAS', 'ALL INCLUSIVE: TODAS LAS COMIDAS Y BEBIDAS INCLUIDAS', 400, 7, '2017-01-01'),
	(28, 'SERVICIO DE HABITACIONES 24H', 'COMPRA ARTICULOS VARIOS', 20, 7, '2017-01-01');

CREATE TABLE GASTOS (
   IDGASTOS 	INT AUTO_INCREMENT NOT NULL,
   IDRESERVA  	INT NOT NULL,
   IDSERVICIOS  INT NOT NULL,
   FECHA  	DATETIME NOT NULL,
   CANTIDAD  	INT NOT NULL, 
   PRECIO 	DECIMAL(6,2) NOT NULL,
   PRIMARY KEY (IDGASTOS),
   FOREIGN KEY (IDRESERVA) REFERENCES RESERVA_HABITAC (IDRESERVA),
   FOREIGN KEY (IDSERVICIOS) REFERENCES SERVICIOS (IDSERVICIOS)
);

INSERT INTO GASTOS
VALUES 	(1, 1, 1, '2017-03-15 12:00', 1, 160),
	(2, 1, 8, '2017-03-15 11:00', 1, 100),
	(3, 4, 2, '2017-03-15 09:30', 1, 200);

CREATE TABLE  RESERVA_HABITAC  (
   IDRESERVA 	 INT AUTO_INCREMENT NOT NULL,
   FECHAENTRADA	 DATE NOT NULL,
   FECHASALIDA 	 DATE NOT NULL,
   IVA  	 FLOAT(5,2) NOT NULL,
   NUMHABIT 	 INT  NOT NULL,
   ID_CLIENTE	 VARCHAR(20) NOT NULL,
   PRIMARY KEY (IDRESERVA),
   FOREIGN KEY (ID_CLIENTE) REFERENCES CLIENTES (ID_CLIENTE),
   FOREIGN KEY (NUMHABIT) REFERENCES HABITACIONES (NUMHABIT)
);

INSERT INTO  RESERVA_HABITAC 
VALUES 	(1, '2017-03-15', '2017-03-25', 0.16, 101, '765789'),
	(2, '2017-03-15', '2017-03-25', 0.16, 102, '12345'),
	(3, '2017-02-16', '2017-02-21', 0.16, 103, '12345'),
	(4, '2017-03-16', '2017-03-21', 0.16, 104, '44767'),
	(5, '2017-04-16', '2017-04-21', 0.16, 105, '44767'),
	(6, '2017-03-16', '2017-03-21', 0.16, 106, '12395'),
	(7, '2017-05-16', '2017-05-21', 0.16, 107, '44444');


-- 1. INSERTE EL TIPO DE SERVICIO OCIO.

INSERT INTO TIPO_SERVICIO VALUES ('OCIO');

SELECT * FROM TIPO_SERVICIO;

--- 2. DÉ DE ALTA UNA RESERVA DE LA HABITACIÓN 101 PARA EL CLIENTE 12345 PARA LAS NOCHES DEL 2 AL 4 DE JULIO DE 2017. 

INSERT INTO RESERVA_HABITAC  (FECHAENTRADA, FECHASALIDA, IVA, NUMHABIT, ID_CLIENTE)
VALUES ('2017-07-02','2017-07-04', 0.16, 101, '12345');

--- ACTUALIZACIONES
--- 3. ACTUALICE EL TELÉFONO DEL CLIENTE 12345. SU NUEVO NÚMERO ES 123456789.

SELECT * FROM CLIENTES WHERE ID_CLIENTE = 12345;

UPDATE CLIENTES SET TELEFONO = '123456789' WHERE ID_CLIENTE = 12345;

--- 4. ACTUALICE EL PRECIO DE LOS SERVICIOS INCREMENTÁNDOLOS EN UN 2%.

SELECT * FROM SERVICIOS; 

UPDATE SERVICIOS SET PRECIO = PRECIO*1.02;

--BORRADOS
--- 5. BORRE LA RESERVA DE LA HABITACIÓN 101 REALIZADA ANTERIORMENTE.

DELETE FROM RESERVA_HABITAC WHERE IDRESERVA=8;

DELETE FROM RESERVA_HABITAC WHERE ID_CLIENTE = 12345 AND 
FECHAENTRADA ='2017-07-02' AND NUMHABIT = 101;

-- CONSULTAS
-- 6. CREA UNA CONSULTA QUE DEVUELVA LOS CLIENTES CUYO APELLIDO INCLUYA LA SÍLABA “EL” ORDENADOS POR SU IDENTIFICADOR.

SELECT * FROM CLIENTES 
WHERE APELLIDOP LIKE '%EL%'
ORDER BY APELLIDOP;

--- 7. CREA UNA CONSULTA QUE DEVUELVA LOS CLIENTES, ORDENADOS POR SU PRIMER APELLIDO, QUE TENGAN ALGUNA OBSERVACIÓN ANOTADA.
SELECT * FROM CLIENTES 
WHERE OBSERVACIONES IS NOT NULL
ORDER BY APELLIDOP;

--- 8. CREA UNA CONSULTA QUE DEVUELVA LOS SERVICIOS CUYO PRECIO SUPERE LOS 50 PESOS ORDENADOS POR SU CÓDIGO DE SERVICIO.
SELECT * FROM SERVICIOS 
WHERE (PRECIO > 50)
ORDER BY IDSERVICIOS;

--- 9. CREE UNA CONSULTA QUE DEVUELVA LAS HABITACIONES RESERVADAS PARA EL DÍA 24 DE MARZO DE 2017.
SELECT NUMHABIT FROM RESERVA_HABITAC
WHERE '2017/03/24' BETWEEN FECHAENTRADA AND FECHASALIDA;

--- 10. CREE UNA CONSULTA QUE DEVUELVA LOS CLIENTES PROCEDENTES DE FRANCIA Y BRASIL.
SELECT * FROM CLIENTES WHERE PAIS IN ('FRANCIA','BRASIL');

--- 11. CREE UNA CONSULTA QUE DEVUELVA TODOS LOS CLIENTES, Y DE AQUELLOS QUE HAN REALIZADO ALGUNA RESERVA EN MARZO, INDICAR EL Nº DE RESERVA.
SELECT C.*, R.IDRESERVA 
FROM CLIENTES C LEFT JOIN RESERVA_HABITAC R ON C.ID_CLIENTE = R.ID_CLIENTE
AND  FECHAENTRADA BETWEEN '2017-03-01' AND '2017-03-30';

--- 12. CREA UNA CONSULTA CON LOS SERVICIOS QUE NUNCA HAN SIDO CONTRATADOS.

SELECT DISTINCT * FROM SERVICIOS
WHERE NOT EXISTS (SELECT * FROM GASTOS
WHERE GASTOS.IDSERVICIOS=SERVICIOS.IDSERVICIOS);

SELECT DISTINCT SERVICIOS.*
    FROM SERVICIOS WHERE IDSERVICIOS NOT IN (
           SELECT IDSERVICIOS FROM GASTOS);

--- 13. CREE UNA CONSULTA QUE DEVUELVA LOS CLIENTES CON EL MISMO PRIMER APELLIDO.

SELECT C.* 
FROM CLIENTES C, CLIENTES A
WHERE C.ID_CLIENTE <> A.ID_CLIENTE AND C.APELLIDOP=A.APELLIDOP;

--GROUP BY
--- 14. CREA UNA CONSULTA QUE DEVUELVA EL Nº DE CLIENTES POR NACIONALIDAD.

SELECT  PAIS, COUNT(ID_CLIENTE) AS NUMERO
FROM CLIENTES GROUP BY PAIS;

--- 15. CREA UNA C ONSULTA QUE DEVUELVA EL Nº DE SERVICIOS QUE SE OFRECEN POR TIPO DE SERVICIO.

SELECT TS.NOMBRESERVICIO, COUNT(IDSERVICIOS) AS CANTIDAD
FROM TIPO_SERVICIO TS INNER JOIN SERVICIOS S
 ON TS.NOMBRESERVICIO = S.NOMBRESERVICIO
GROUP BY TS.NOMBRESERVICIO
 HAVING COUNT(*) >1;

--- 16. CREE UNA CONSULTA QUE DEVUELVA EL GASTO EN SERVICIOS REALIZADO POR CADA RESERVA.
SELECT G.IDRESERVA, SUM(G.CANTIDAD * G.PRECIO) AS TOTAL
FROM  GASTOS G
GROUP BY G.IDRESERVA;

---17. CREE UNA CONSULTA QUE DEVUELVA EL PRECIO DEL SERVICIO MÁS CARO Y DEL MÁS BARATO

SELECT  MAX(PRECIO) MAXIMO,  MIN(PRECIO) MÍNIMO
FROM SERVICIOS;

SELECT IDSERVICIOS, 'MAXIMO', PRECIO
FROM SERVICIOS 
 WHERE PRECIO = (SELECT MAX(PRECIO) FROM SERVICIOS)
UNION
SELECT IDSERVICIOS, 'MINIMO', PRECIO
FROM SERVICIOS 
 WHERE PRECIO = (SELECT MIN(PRECIO) FROM SERVICIOS);

--FUNCIONES

--• CREA UNA FUNCIÓN QUE DEVUELVA EL GASTO REALIZADO POR UNA RESERVA CON IVA INCLUIDO.
DELIMITER // 
CREATE FUNCTION GASTORESERVA (RESERVA DECIMAL)  RETURNS DECIMAL(10,2)
BEGIN 
 RETURN(
  SELECT SUM((G.PRECIO*CANTIDAD)*(1+ (IVA/100)))  FROM GASTOS G, SERVICIOS S
     WHERE G.IDSERVICIOS=S.IDSERVICIOS AND IDRESERVA=RESERVA);
END //
DELIMITER

SELECT * FROM GASTOS

SELECT GASTORESERVA;
